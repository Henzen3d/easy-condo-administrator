import{r as l,s as u,j as e,K as M,L as ne,O as oe,M as P,I as T,a as G}from"./index-PF3D36V0.js";import{L as c,T as Ne,a as Ee,b as ee,c as ae}from"./tabs-DTHgOjkY.js";import{u as le}from"./use-toast-DSwJ8fSR.js";import{S as z,e as H,f as K,g as W,h as D,D as we,a as Se,b as Te,c as Ce,d as Re,i as De}from"./select-BUw1FKH9.js";import{A as te,b as re,a as se,C as Ae}from"./alert-DARdkq_h.js";import{ensureMeterReadingsTableExists as ie,ensureBillingsTableExists as Ie}from"./dbUtils-YHBIwV5j.js";import{I as Fe}from"./info-DYRJQGRw.js";function Le(){const{toast:n}=le(),[j,h]=l.useState(!1),[N,A]=l.useState(null),[I,_]=l.useState(null),[s,E]=l.useState({utility_type:"gas",rate_per_cubic_meter:"",effective_date:new Date().toISOString().split("T")[0]});l.useEffect(()=>{a()},[]);const a=async()=>{h(!0);try{const{data:i,error:p}=await u.from("utility_rates").select("*").eq("utility_type","gas").order("effective_date",{ascending:!1}).limit(1);if(p)throw p;if(i.length>0){const S={...i[0],utility_type:i[0].utility_type};A(S)}const{data:v,error:b}=await u.from("utility_rates").select("*").eq("utility_type","water").order("effective_date",{ascending:!1}).limit(1);if(b)throw b;if(v.length>0){const S={...v[0],utility_type:v[0].utility_type};_(S)}}catch(i){console.error("Error loading rates:",i),n({title:"Erro ao carregar taxas",description:"Não foi possível carregar as taxas atuais.",variant:"destructive"})}finally{h(!1)}},g=async i=>{if(i.preventDefault(),!s.rate_per_cubic_meter||parseFloat(s.rate_per_cubic_meter)<=0){n({title:"Valor inválido",description:"Por favor, insira um valor válido maior que zero.",variant:"destructive"});return}h(!0);try{console.log("Iniciando salvamento de nova taxa com os dados:",{utility_type:s.utility_type,rate_per_cubic_meter:parseFloat(s.rate_per_cubic_meter),effective_date:s.effective_date});const{data:p,error:v}=await u.from("utility_rates").insert([{utility_type:s.utility_type,rate_per_cubic_meter:parseFloat(s.rate_per_cubic_meter),effective_date:s.effective_date}]).select();if(v)throw console.error("Erro detalhado ao salvar taxa:",v),v;if(console.log("Taxa salva com sucesso no Supabase:",p),n({title:"Taxa atualizada com sucesso",description:`A nova taxa de ${s.utility_type==="gas"?"gás":"água"} foi cadastrada.`}),p&&p.length>0){const b={...p[0],utility_type:p[0].utility_type};console.log(`Atualizando estado local da taxa de ${s.utility_type} para:`,b),s.utility_type==="gas"?A(b):_(b)}E({...s,rate_per_cubic_meter:""}),console.log("Recarregando taxas após salvamento..."),await a()}catch(p){console.error("Error saving rate:",p),n({title:"Erro ao salvar taxa",description:"Não foi possível salvar a nova taxa.",variant:"destructive"})}finally{h(!1)}},F=i=>new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(i),w=i=>{const p=new Date(i);return new Intl.DateTimeFormat("pt-BR").format(p)};return e.jsxs(M,{children:[e.jsx(ne,{children:e.jsx(oe,{children:"Taxas de Consumo"})}),e.jsxs(P,{className:"space-y-6",children:[e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[e.jsxs("div",{className:"space-y-2 p-4 border rounded-lg",children:[e.jsx("h3",{className:"font-medium",children:"Taxa Atual - Gás"}),N?e.jsxs("div",{className:"space-y-1",children:[e.jsxs("p",{className:"text-2xl font-bold",children:[F(N.rate_per_cubic_meter),"/m³"]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Atualizado em ",w(N.effective_date)]})]}):e.jsx("p",{className:"text-muted-foreground",children:"Nenhuma taxa configurada"})]}),e.jsxs("div",{className:"space-y-2 p-4 border rounded-lg",children:[e.jsx("h3",{className:"font-medium",children:"Taxa Atual - Água"}),I?e.jsxs("div",{className:"space-y-1",children:[e.jsxs("p",{className:"text-2xl font-bold",children:[F(I.rate_per_cubic_meter),"/m³"]}),e.jsxs("p",{className:"text-sm text-muted-foreground",children:["Atualizado em ",w(I.effective_date)]})]}):e.jsx("p",{className:"text-muted-foreground",children:"Nenhuma taxa configurada"})]})]}),e.jsxs("form",{className:"space-y-4 pt-4 border-t",onSubmit:g,children:[e.jsx("h3",{className:"font-medium",children:"Cadastrar Nova Taxa"}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"utility-type",children:"Tipo de Consumo"}),e.jsxs(z,{value:s.utility_type,onValueChange:i=>E({...s,utility_type:i}),children:[e.jsx(H,{id:"utility-type",children:e.jsx(K,{placeholder:"Selecione o tipo"})}),e.jsxs(W,{children:[e.jsx(D,{value:"gas",children:"Gás"}),e.jsx(D,{value:"water",children:"Água"})]})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"rate-value",children:"Valor por m³ (R$)"}),e.jsx(T,{id:"rate-value",type:"number",step:"0.01",placeholder:"0.00",value:s.rate_per_cubic_meter,onChange:i=>E({...s,rate_per_cubic_meter:i.target.value})})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"effective-date",children:"Data de Vigência"}),e.jsx(T,{id:"effective-date",type:"date",value:s.effective_date,onChange:i=>E({...s,effective_date:i.target.value})})]}),e.jsx(G,{type:"submit",className:"w-full",disabled:j,children:j?"Salvando...":"Salvar Nova Taxa"})]})]})]})}const V=n=>new Intl.NumberFormat("pt-BR",{style:"currency",currency:"BRL"}).format(n);function Oe(){const{toast:n}=le(),[j,h]=l.useState(!1),[N,A]=l.useState([]),[I,_]=l.useState(null),[s,E]=l.useState(null),[a,g]=l.useState({unit_id:"",utility_type:"gas",previous_reading:"",current_reading:"",reading_date:new Date().toISOString().split("T")[0],total_value:0}),[F,w]=l.useState(!1),[i,p]=l.useState({unit:"",type:"",reading:"",consumption:"",totalValue:"",date:"",billId:"",description:""}),[v,b]=l.useState(!1);l.useEffect(()=>{S()},[]),l.useEffect(()=>{v&&ce()},[v]),l.useEffect(()=>{a.unit_id&&a.utility_type&&(g(t=>({...t,current_reading:"",total_value:0})),de(),ue())},[a.unit_id,a.utility_type]),l.useEffect(()=>{me()},[a.previous_reading,a.current_reading,s]);const S=async()=>{try{return console.log("Verificando tabelas necessárias..."),await ie()?(await Ie()||n({title:"Aviso",description:"Funcionamento parcial: leituras serão salvas, mas cobranças podem não ser geradas automaticamente.",variant:"default"}),console.log("Tabelas verificadas e criadas com sucesso"),b(!0),!0):(n({title:"Erro na estrutura de dados",description:"Não foi possível verificar ou criar a tabela de leituras de medidores.",variant:"destructive"}),!1)}catch(t){return console.error("Erro ao verificar tabelas:",t),n({title:"Erro na estrutura de dados",description:"Ocorreu um erro ao verificar a estrutura do banco de dados.",variant:"destructive"}),!1}},ce=async()=>{try{const{data:t,error:r}=await u.from("units").select("id, block, number").order("block").order("number");if(r)throw r;A(t||[])}catch(t){console.error("Error loading units:",t),n({title:"Erro ao carregar unidades",description:"Não foi possível carregar a lista de unidades.",variant:"destructive"})}},de=async()=>{if(a.unit_id){h(!0);try{console.log(`Buscando leitura anterior para unidade_id=${a.unit_id} e tipo=${a.utility_type}`);const{data:t,error:r}=await u.from("meter_readings").select("*").eq("unit_id",parseInt(a.unit_id)).eq("utility_type",a.utility_type).order("reading_date",{ascending:!1}).order("created_at",{ascending:!1}).limit(1);if(r)throw console.error("Erro ao buscar leitura anterior:",r),r;if(console.log("Dados de leitura anterior obtidos:",t),t&&t.length>0){const o={...t[0],utility_type:t[0].utility_type};_(o),g(f=>({...f,previous_reading:o.reading_value.toString(),current_reading:""})),console.log("Leitura anterior definida:",o.reading_value.toString())}else console.log("Nenhuma leitura anterior encontrada, definindo como zero"),_(null),g(o=>({...o,previous_reading:"0",current_reading:""}))}catch(t){console.error("Error loading previous reading:",t),n({title:"Erro ao carregar leitura anterior",description:"Não foi possível carregar a leitura anterior.",variant:"destructive"}),_(null),g(r=>({...r,previous_reading:"0"}))}finally{h(!1)}}},ue=async()=>{try{const{data:t,error:r}=await u.from("utility_rates").select("*").eq("utility_type",a.utility_type).order("effective_date",{ascending:!1}).limit(1);if(r)throw r;t.length>0&&E(t[0])}catch(t){console.error("Error loading current rate:",t),n({title:"Erro ao carregar taxa atual",description:"Não foi possível carregar a taxa atual.",variant:"destructive"})}},me=()=>{const t=parseFloat(a.previous_reading)||0,r=parseFloat(a.current_reading)||0,o=(s==null?void 0:s.rate_per_cubic_meter)||0;if(r>t){const d=(r-t)*o;return g(x=>({...x,total_value:d})),d}return 0},ge=async()=>{try{console.log("Verificando estrutura da tabela de cobranças");const{data:t,error:r}=await u.from("billings").select("id").limit(1);if(!r){console.log("Tabela 'billings' encontrada");const{data:d,error:x}=await u.from("billings").select("*").limit(1);if(!x&&d&&d.length>0){const m=Object.keys(d[0]);return console.log("Colunas disponíveis na tabela billings:",m),{tableExists:!0,tableName:"billings",columns:m,error:null}}return{tableExists:!0,tableName:"billings",columns:["unit","description","amount","due_date","status","resident","is_printed","is_sent"],error:null}}console.log("Erro ao verificar tabela 'billings':",r);const{data:o,error:f}=await u.from("billing").select("id").limit(1);if(!f){console.log("Tabela 'billing' encontrada");const{data:d,error:x}=await u.from("billing").select("*").limit(1);if(!x&&d&&d.length>0){const m=Object.keys(d[0]);return console.log("Colunas disponíveis na tabela billing:",m),{tableExists:!0,tableName:"billing",columns:m,error:null}}return{tableExists:!0,tableName:"billing",columns:["unit","description","amount","due_date","status","resident","is_printed","is_sent"],error:null}}return console.error("Nenhuma tabela de cobranças encontrada"),{tableExists:!1,tableName:null,columns:[],error:"Nenhuma tabela de cobranças encontrada"}}catch(t){return console.error("Erro ao verificar tabela de cobranças:",t),{tableExists:!1,tableName:null,columns:[],error:t}}},pe=async()=>{try{if(console.log("DIAGNÓSTICO - Verificando estrutura da tabela meter_readings..."),await ie())return console.log("ESTRUTURA - Tabela meter_readings verificada com sucesso"),!0;{console.log("ESTRUTURA - Falha ao verificar tabela meter_readings");const{data:r,error:o}=await u.from("meter_readings").select("*").limit(1);if(o)return console.error("ERRO - Falha ao verificar tabela meter_readings:",o),!1;if(r&&r.length>0){const f=r[0];return console.log("ESTRUTURA - Campos disponíveis na tabela meter_readings:",Object.keys(f)),!0}else{console.log("ESTRUTURA - Tabela meter_readings existe mas está vazia");const f={unit_id:1,utility_type:"WATER",reading_value:0,reading_date:new Date().toISOString().split("T")[0]};console.log("DIAGNÓSTICO - Tentando inserção de teste:",f);const{data:d,error:x}=await u.from("meter_readings").insert([f]).select();if(x)return console.error("ERRO - Falha na inserção de teste:",x),!1;{console.log("SUCESSO - Inserção de teste bem-sucedida:",d);const{error:m}=await u.from("meter_readings").delete().eq("id",d[0].id);return m?console.warn("ALERTA - Não foi possível remover o registro de teste:",m):console.log("LIMPEZA - Registro de teste removido com sucesso"),!0}}}}catch(t){return console.error("ERRO CRÍTICO - Erro ao verificar tabela meter_readings:",t),!1}};l.useEffect(()=>{(async()=>{try{await S(),await pe()?console.log("INICIALIZAÇÃO - Estrutura da tabela meter_readings verificada e OK"):n({title:"Alerta",description:"Possível problema com a estrutura da tabela de leituras. Verifique o console para mais detalhes.",variant:"destructive"})}catch(r){console.error("Erro ao verificar tabelas:",r)}})()},[]);const fe=async t=>{var d,x;t.preventDefault();const r=parseFloat(a.previous_reading),o=parseFloat(a.current_reading);if(!o||o<0){n({title:"Valor inválido",description:"Por favor, insira um valor de leitura válido.",variant:"destructive"});return}if(o<=r&&r>0){n({title:"Valor inválido",description:"A leitura atual deve ser maior que a leitura anterior.",variant:"destructive"});return}if(!a.unit_id){n({title:"Unidade não selecionada",description:"Por favor, selecione uma unidade.",variant:"destructive"});return}const f=parseInt(a.unit_id);h(!0),n({title:"Processando",description:"Salvando leitura e gerando cobrança..."});try{const m={unit_id:f,utility_type:a.utility_type,reading_value:o,reading_date:a.reading_date};console.log("DIAGNÓSTICO - Inserindo nova leitura na tabela meter_readings:",m);const{data:C,error:$}=await u.from("meter_readings").insert([m]).select();if($)throw console.error("ERRO - Falha ao inserir na tabela meter_readings:",$),new Error(`Erro ao salvar leitura: ${$.message}`);console.log("SUCESSO - Nova leitura salva na tabela meter_readings:",C),C&&C.length>0?(console.log("DIAGNÓSTICO - Atualizando estado com a nova leitura:",C[0]),_(C[0]),g(y=>({...y,previous_reading:o.toString(),current_reading:""}))):console.warn("ALERTA - A leitura foi inserida mas nenhum dado foi retornado");let U=!1,Z="",he=null;const k=o-r;try{const{data:y,error:J}=await u.from("units").select("block, number, owner").eq("id",f).single();if(J)throw J;const q=N.find(je=>je.id.toString()===a.unit_id),be=q?`${q.block}-${q.number}`:"",ye=`Consumo de ${a.utility_type==="gas"?"gás":"água"} (${k.toFixed(3)} m³)`,R=await ge();if(!R.tableExists||!R.tableName)throw new Error(`Tabela de cobranças não encontrada: ${R.error}`);const Q=R.tableName,L=R.columns||[],X={...{unit:be,description:ye,amount:a.total_value,due_date:a.reading_date,status:"pending"},...L.includes("resident")&&{resident:y.owner||"Morador"},...L.includes("is_printed")&&{is_printed:!1},...L.includes("is_sent")&&{is_sent:!1},...L.includes("unit_id")&&{unit_id:f}};console.log(`Inserindo cobrança na tabela ${Q}:`,X);const{data:O,error:Y}=await u.from(Q).insert([X]).select();if(Y)throw Y;U=!0,Z=((x=(d=O==null?void 0:O[0])==null?void 0:d.id)==null?void 0:x.toString())||"",console.log("Cobrança criada com sucesso:",O)}catch(y){he=y,console.error("Erro ao criar cobrança:",y)}const B=N.find(y=>y.id.toString()===a.unit_id),ve=B?`${B.block}-${B.number}`:"",_e=`Consumo de ${a.utility_type==="gas"?"gás":"água"} (${k.toFixed(3)} m³)`;p({unit:ve,type:a.utility_type==="gas"?"Gás":"Água",reading:`${o.toFixed(3)} m³`,consumption:`${k.toFixed(3)} m³`,totalValue:V(a.total_value),date:new Date(a.reading_date).toLocaleDateString("pt-BR"),billId:U?Z:"Erro ao gerar cobrança",description:_e}),n(U?{title:"Leitura e cobrança registradas",description:`A leitura de ${a.utility_type==="gas"?"gás":"água"} foi registrada e a cobrança foi gerada.`,variant:"default"}:{title:"Leitura registrada",description:"A leitura foi salva, mas houve um problema ao gerar a cobrança.",variant:"default"}),w(!0)}catch(m){console.error("Erro ao salvar leitura ou cobrança:",m),n({title:"Erro ao processar",description:m instanceof Error?m.message:"Não foi possível salvar a leitura ou gerar cobrança.",variant:"destructive"})}finally{h(!1)}},xe=()=>{w(!1),g({unit_id:"",utility_type:"gas",previous_reading:"",current_reading:"",reading_date:new Date().toISOString().split("T")[0],total_value:0}),_(null),E(null),h(!1)};return e.jsxs(e.Fragment,{children:[e.jsxs(M,{className:"w-full",children:[e.jsx(ne,{children:e.jsx(oe,{children:"Leituras de Medidores"})}),e.jsx(P,{className:"space-y-6",children:e.jsxs("form",{className:"space-y-4",onSubmit:fe,children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"unit-id",children:"Unidade"}),e.jsxs(z,{value:a.unit_id,onValueChange:t=>g({...a,unit_id:t}),children:[e.jsx(H,{id:"unit-id",children:e.jsx(K,{placeholder:"Selecione a unidade"})}),e.jsx(W,{children:N.map(t=>e.jsxs(D,{value:String(t.id),children:[t.block,"-",t.number]},t.id))})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"utility-type",children:"Tipo de Consumo"}),e.jsxs(z,{value:a.utility_type,onValueChange:t=>g({...a,utility_type:t}),children:[e.jsx(H,{id:"utility-type",children:e.jsx(K,{placeholder:"Selecione o tipo"})}),e.jsxs(W,{children:[e.jsx(D,{value:"gas",children:"Gás"}),e.jsx(D,{value:"water",children:"Água"})]})]})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"previous-reading",children:"Leitura Anterior (m³)"}),e.jsx(T,{id:"previous-reading",type:"number",step:"0.001",placeholder:"0.000",value:a.previous_reading,onChange:t=>{g({...a,previous_reading:t.target.value})}})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"current-reading",children:"Leitura Atual (m³)"}),e.jsx(T,{id:"current-reading",type:"number",step:"0.001",placeholder:"0.000",value:a.current_reading,onChange:t=>{g({...a,current_reading:t.target.value})}})]})]}),a.unit_id&&a.utility_type&&!s&&e.jsxs(te,{children:[e.jsx(Fe,{className:"h-4 w-4"}),e.jsx(re,{children:"Atenção"}),e.jsxs(se,{children:["Não há taxa definida para ",a.utility_type==="gas"?"gás":"água",'. Por favor, defina uma taxa primeiro na aba "Taxas de Consumo".']})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"reading-date",children:"Data da Leitura"}),e.jsx(T,{id:"reading-date",type:"date",value:a.reading_date,onChange:t=>g({...a,reading_date:t.target.value})})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsx(c,{htmlFor:"total-value",children:"Valor da Leitura (R$)"}),e.jsx(T,{id:"total-value",type:"text",placeholder:"R$ 0,00",value:V(a.total_value),readOnly:!0})]})]}),a.current_reading&&a.previous_reading&&s&&e.jsx(M,{className:"bg-muted/30",children:e.jsx(P,{className:"pt-4 pb-2",children:e.jsxs("div",{className:"text-sm space-y-1",children:[e.jsxs("p",{children:[e.jsx("strong",{children:"Consumo:"})," ",(parseFloat(a.current_reading)-parseFloat(a.previous_reading)).toFixed(3)," m³"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Taxa atual:"})," ",V(s.rate_per_cubic_meter)," por m³"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Valor total:"})," ",V(a.total_value)]})]})})}),e.jsx(G,{type:"submit",className:"w-full",disabled:j||!a.unit_id,children:j?"Salvando...":"Registrar Leitura"})]})})]}),e.jsx(we,{open:F,onOpenChange:w,children:e.jsxs(Se,{className:"sm:max-w-[425px]",children:[e.jsxs(Te,{children:[e.jsx(Ce,{children:"Leitura Registrada com Sucesso"}),e.jsx(Re,{children:"A leitura foi registrada e a cobrança foi gerada no sistema."})]}),e.jsxs("div",{className:"py-4",children:[e.jsxs(te,{className:"mb-4 bg-green-50 border-green-200",children:[e.jsx(Ae,{className:"h-4 w-4 text-green-600"}),e.jsx(re,{className:"text-green-800",children:"Processamento concluído"}),e.jsx(se,{className:"text-green-700",children:"Todos os dados foram salvos com sucesso."})]}),e.jsxs("div",{className:"grid grid-cols-2 gap-3",children:[e.jsxs("div",{className:"space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Unidade"}),e.jsx("p",{className:"text-sm font-medium",children:i.unit})]}),e.jsxs("div",{className:"space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Tipo"}),e.jsx("p",{className:"text-sm font-medium",children:i.type})]}),e.jsxs("div",{className:"space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Leitura Atual"}),e.jsx("p",{className:"text-sm font-medium",children:i.reading})]}),e.jsxs("div",{className:"space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Consumo"}),e.jsx("p",{className:"text-sm font-medium",children:i.consumption})]}),e.jsxs("div",{className:"space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Valor Total"}),e.jsx("p",{className:"text-sm font-medium",children:i.totalValue})]}),e.jsxs("div",{className:"space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Data"}),e.jsx("p",{className:"text-sm font-medium",children:i.date})]}),e.jsxs("div",{className:"col-span-2 space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"Descrição"}),e.jsx("p",{className:"text-sm font-medium",children:i.description})]}),e.jsxs("div",{className:"col-span-2 space-y-1",children:[e.jsx(c,{className:"text-xs text-muted-foreground",children:"ID da Cobrança"}),e.jsx("p",{className:"text-sm font-medium",children:i.billId})]})]})]}),e.jsx(De,{children:e.jsx(G,{onClick:xe,children:"Fechar"})})]})})]})}function Ge(){const[n,j]=l.useState("rates");return e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"flex flex-col gap-2",children:[e.jsx("h1",{className:"text-3xl font-bold tracking-tight animate-slide-in-top",children:"Consumos"}),e.jsx("p",{className:"text-muted-foreground animate-slide-in-top animation-delay-200",children:"Configure taxas e registre leituras de consumo de gás e água."})]}),e.jsxs(Ne,{value:n,onValueChange:j,className:"w-full",children:[e.jsxs(Ee,{className:"grid grid-cols-2 w-full max-w-md",children:[e.jsx(ee,{value:"rates",children:"Taxas de Consumo"}),e.jsx(ee,{value:"readings",children:"Leituras de Medidores"})]}),e.jsx(ae,{value:"rates",className:"mt-6",children:e.jsx(Le,{})}),e.jsx(ae,{value:"readings",className:"mt-6",children:e.jsx(Oe,{})})]}),e.jsx("div",{className:"h-20"})]})}export{Ge as default};
